import Footer from '.'
import { ThemeProvider } from '../../utils/context'
import { render, screen, fireEvent } from '@testing-library/react'

//Pour s'assurer que Footer render bien dans le DOM,
//mais pour que √ßa fonctionne, s'assurer que Footer est wrapp√© dans ThemeProvider
//puisque c'est gr√¢ce √† lui qu'on peut mettre un fond noir ou clair.
describe('Footer', () => {
  test('Should render without crash', async () => {
    render(
      <ThemeProvider>
        <Footer />
      </ThemeProvider>
    )
    //screen  est en quelque sorte le body  qui contient notre composant,
    //√† partir duquel on va pouvoir utiliser nos s√©lecteurs.
    const nightModeButton = screen.getByRole('button')
    // Ici, nous avons utilis√© le s√©lecteur getByRole.
    // Ce s√©lecteur peut dans beaucoup de cas vous permettre
    // d'acc√©der √† votre √©l√©ment, d'autant que vous pouvez lui
    // passer un param√®tre pour cibler encore plus pr√©cis√©ment un √©l√©ment.
    // Mais dans le cas o√π vous ne pouvez pas l'utiliser,
    // et o√π aucun autre s√©lecteur ne vous permet de cibler votre √©l√©ment,
    // vous pouvez tout √† fait passer data-testid  √† votre composant
    // et ensuite y acc√©der avec le s√©lecteur getByTestId.
    // Je vous laisse regarder la documentation de React Testing Library par vous-m√™me (en anglais).
    expect(nightModeButton.textContent).toBe('Changer de mode : ‚òÄÔ∏è')
    //Pour interagir avec notre composant,
    //on a besoin de fireEvent  qui va nous permettre
    //de d√©clencher des √©v√©nements du DOM, ici click  . On fait donc :
    fireEvent.click(nightModeButton)
    expect(nightModeButton.textContent).toBe('Changer de mode : üåô')
  })
})
